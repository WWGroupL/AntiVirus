#pragma once

namespace MalwareScanner {

	using namespace System;
	using namespace System::ComponentModel;
	using namespace System::Collections;
	using namespace System::Windows::Forms;
	using namespace System::Data;
	using namespace System::Drawing;

	/// <summary>
	/// Summary for previous_scan_results
	/// </summary>
	public ref class previous_scan_results : public System::Windows::Forms::Form
	{
	public:
		previous_scan_results(void)
		{
			InitializeComponent();
			//
			//TODO: Add the constructor code here
			//
		}

	protected:
		/// <summary>
		/// Clean up any resources being used.
		/// </summary>
		~previous_scan_results()
		{
			if (components)
			{
				delete components;
			}
		}
	private: System::Windows::Forms::ListView^ lVReport;
	protected:
	private: System::Windows::Forms::Label^ lblTitle;
	private: System::Windows::Forms::ColumnHeader^ Report;

	private:
		/// <summary>
		/// Required designer variable.
		/// </summary>
		System::ComponentModel::Container ^components;

#pragma region Windows Form Designer generated code
		/// <summary>
		/// Required method for Designer support - do not modify
		/// the contents of this method with the code editor.
		/// </summary>
		void InitializeComponent(void)
		{
			System::ComponentModel::ComponentResourceManager^ resources = (gcnew System::ComponentModel::ComponentResourceManager(previous_scan_results::typeid));
			this->lVReport = (gcnew System::Windows::Forms::ListView());
			this->Report = (gcnew System::Windows::Forms::ColumnHeader());
			this->lblTitle = (gcnew System::Windows::Forms::Label());
			this->SuspendLayout();
			// 
			// lVReport
			// 
			this->lVReport->BackColor = System::Drawing::Color::FromArgb(static_cast<System::Int32>(static_cast<System::Byte>(66)), static_cast<System::Int32>(static_cast<System::Byte>(66)),
				static_cast<System::Int32>(static_cast<System::Byte>(66)));
			this->lVReport->Columns->AddRange(gcnew cli::array< System::Windows::Forms::ColumnHeader^  >(1) { this->Report });
			this->lVReport->Font = (gcnew System::Drawing::Font(L"Consolas", 12, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->lVReport->ForeColor = System::Drawing::SystemColors::Menu;
			this->lVReport->HideSelection = false;
			this->lVReport->Location = System::Drawing::Point(34, 115);
			this->lVReport->Name = L"lVReport";
			this->lVReport->Size = System::Drawing::Size(1335, 677);
			this->lVReport->TabIndex = 0;
			this->lVReport->UseCompatibleStateImageBehavior = false;
			this->lVReport->View = System::Windows::Forms::View::Details;
			// 
			// Report
			// 
			this->Report->Text = L"Report";
			this->Report->Width = 1331;
			// 
			// lblTitle
			// 
			this->lblTitle->AutoSize = true;
			this->lblTitle->BackColor = System::Drawing::Color::FromArgb(static_cast<System::Int32>(static_cast<System::Byte>(36)), static_cast<System::Int32>(static_cast<System::Byte>(36)),
				static_cast<System::Int32>(static_cast<System::Byte>(36)));
			this->lblTitle->Font = (gcnew System::Drawing::Font(L"Verdana", 36, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->lblTitle->ForeColor = System::Drawing::Color::White;
			this->lblTitle->Location = System::Drawing::Point(554, 26);
			this->lblTitle->Name = L"lblTitle";
			this->lblTitle->Size = System::Drawing::Size(318, 59);
			this->lblTitle->TabIndex = 1;
			this->lblTitle->Text = L"Scan Report";
			this->lblTitle->Click += gcnew System::EventHandler(this, &previous_scan_results::lblTitle_Click);
			// 
			// previous_scan_results
			// 
			this->AutoScaleDimensions = System::Drawing::SizeF(6, 13);
			this->AutoScaleMode = System::Windows::Forms::AutoScaleMode::Font;
			this->BackColor = System::Drawing::Color::FromArgb(static_cast<System::Int32>(static_cast<System::Byte>(36)), static_cast<System::Int32>(static_cast<System::Byte>(36)),
				static_cast<System::Int32>(static_cast<System::Byte>(36)));
			this->ClientSize = System::Drawing::Size(1381, 804);
			this->Controls->Add(this->lblTitle);
			this->Controls->Add(this->lVReport);
			this->Icon = (cli::safe_cast<System::Drawing::Icon^>(resources->GetObject(L"$this.Icon")));
			this->MaximizeBox = false;
			this->MinimizeBox = false;
			this->Name = L"previous_scan_results";
			this->StartPosition = System::Windows::Forms::FormStartPosition::CenterScreen;
			this->Text = L"previous_scan_results";
			this->Load += gcnew System::EventHandler(this, &previous_scan_results::previous_scan_results_Load);
			this->ResumeLayout(false);
			this->PerformLayout();

		}
#pragma endregion

	
	private: System::Void previous_scan_results_Load(System::Object^ sender, System::EventArgs^ e)
	{
		String^ folder = "C:\\Users\\" + Environment::UserName + "\\AppData\\LocalLow\\McAffront_AVirus_SafeToDelete";
		array<String^>^ file = Directory::GetFiles(folder);

		for (int i = 0; i < file->Length; i++)
		{
			if (file[i]->EndsWith(".txt")) 
			{
				if (file[i]->EndsWith(GlobalVariables::item_selected + "-scan_report.txt"))
					populateReport(file[i]);
			}
		}
	}

	private: System::Void populateReport(String^ file)
	{
		try {
			String^ scanResults = file;
			StreamReader^ din = File::OpenText(scanResults);

			String^ str;

			while ((str = din->ReadLine()) != nullptr)
			{
				lVReport->Items->Add(str);
			}
		}
		catch (IOException^)
		{
			lVReport->Items->Add("You have no previous scan results");
		}
	}
	private: System::Void lblTitle_Click(System::Object^ sender, System::EventArgs^ e) {
	}
};
}