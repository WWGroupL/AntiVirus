#pragma once

namespace MalwareScanner {

	using namespace System;
	using namespace System::IO;
	using namespace System::ComponentModel;
	using namespace System::Collections;
	using namespace System::Windows::Forms;
	using namespace System::Data;
	using namespace System::Drawing;
	using namespace System::Diagnostics;

	/// <summary>
	/// Summary for scan_logs
	/// </summary>
	public ref class scan_logs : public System::Windows::Forms::Form
	{
	public:
		scan_logs(void)
		{
			InitializeComponent();
			//
			//TODO: Add the constructor code here
			//
		}

	protected:
		/// <summary>
		/// Clean up any resources being used.
		/// </summary>
		~scan_logs()
		{
			if (components)
			{
				delete components;
			}
		}
	private: System::Windows::Forms::ListView^ lVScanReports;
	protected:

	protected:



	private: System::Windows::Forms::ColumnHeader^ clToS;
	private: System::Windows::Forms::ColumnHeader^ clSP;
	private: System::Windows::Forms::ColumnHeader^ clReport;
	private: System::Windows::Forms::Label^ lblTitle;



	protected:



	protected:




	private:
		/// <summary>
		/// Required designer variable.
		/// </summary>
		System::ComponentModel::Container ^components;

#pragma region Windows Form Designer generated code
		/// <summary>
		/// Required method for Designer support - do not modify
		/// the contents of this method with the code editor.
		/// </summary>
		void InitializeComponent(void)
		{
			System::ComponentModel::ComponentResourceManager^ resources = (gcnew System::ComponentModel::ComponentResourceManager(scan_logs::typeid));
			this->lVScanReports = (gcnew System::Windows::Forms::ListView());
			this->clToS = (gcnew System::Windows::Forms::ColumnHeader());
			this->clSP = (gcnew System::Windows::Forms::ColumnHeader());
			this->clReport = (gcnew System::Windows::Forms::ColumnHeader());
			this->lblTitle = (gcnew System::Windows::Forms::Label());
			this->SuspendLayout();
			// 
			// lVScanReports
			// 
			this->lVScanReports->BackColor = System::Drawing::Color::FromArgb(static_cast<System::Int32>(static_cast<System::Byte>(66)), static_cast<System::Int32>(static_cast<System::Byte>(66)),
				static_cast<System::Int32>(static_cast<System::Byte>(66)));
			this->lVScanReports->BorderStyle = System::Windows::Forms::BorderStyle::FixedSingle;
			this->lVScanReports->Columns->AddRange(gcnew cli::array< System::Windows::Forms::ColumnHeader^  >(3) {
				this->clToS, this->clSP,
					this->clReport
			});
			this->lVScanReports->Font = (gcnew System::Drawing::Font(L"Times New Roman", 12, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->lVScanReports->ForeColor = System::Drawing::SystemColors::Menu;
			this->lVScanReports->HideSelection = false;
			this->lVScanReports->Location = System::Drawing::Point(12, 195);
			this->lVScanReports->Name = L"lVScanReports";
			this->lVScanReports->Size = System::Drawing::Size(705, 255);
			this->lVScanReports->TabIndex = 3;
			this->lVScanReports->UseCompatibleStateImageBehavior = false;
			this->lVScanReports->View = System::Windows::Forms::View::Details;
			// 
			// clToS
			// 
			this->clToS->Text = L"Time of Scan";
			this->clToS->Width = 245;
			// 
			// clSP
			// 
			this->clSP->Text = L"Scan Parameters";
			this->clSP->Width = 245;
			// 
			// clReport
			// 
			this->clReport->Text = L"Report";
			this->clReport->Width = 190;
			// 
			// lblTitle
			// 
			this->lblTitle->AutoSize = true;
			this->lblTitle->BackColor = System::Drawing::Color::FromArgb(static_cast<System::Int32>(static_cast<System::Byte>(36)), static_cast<System::Int32>(static_cast<System::Byte>(36)),
				static_cast<System::Int32>(static_cast<System::Byte>(36)));
			this->lblTitle->Font = (gcnew System::Drawing::Font(L"Verdana", 36, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->lblTitle->ForeColor = System::Drawing::Color::White;
			this->lblTitle->Location = System::Drawing::Point(78, 57);
			this->lblTitle->Name = L"lblTitle";
			this->lblTitle->Size = System::Drawing::Size(563, 59);
			this->lblTitle->TabIndex = 4;
			this->lblTitle->Text = L"Previous Scan Reports";
			// 
			// scan_logs
			// 
			this->AutoScaleDimensions = System::Drawing::SizeF(6, 14);
			this->AutoScaleMode = System::Windows::Forms::AutoScaleMode::Font;
			this->BackColor = System::Drawing::Color::FromArgb(static_cast<System::Int32>(static_cast<System::Byte>(36)), static_cast<System::Int32>(static_cast<System::Byte>(36)),
				static_cast<System::Int32>(static_cast<System::Byte>(36)));
			this->ClientSize = System::Drawing::Size(729, 471);
			this->Controls->Add(this->lblTitle);
			this->Controls->Add(this->lVScanReports);
			this->Font = (gcnew System::Drawing::Font(L"Times New Roman", 8.25F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				static_cast<System::Byte>(0)));
			this->ForeColor = System::Drawing::SystemColors::Menu;
			this->Icon = (cli::safe_cast<System::Drawing::Icon^>(resources->GetObject(L"$this.Icon")));
			this->MaximizeBox = false;
			this->MinimizeBox = false;
			this->Name = L"scan_logs";
			this->StartPosition = System::Windows::Forms::FormStartPosition::CenterScreen;
			this->Text = L"Previous Scan Reports";
			this->Load += gcnew System::EventHandler(this, &scan_logs::scan_logs_Load);
			this->ResumeLayout(false);
			this->PerformLayout();

		}
#pragma endregion
	private: System::Void tableLayoutPanel1_Paint(System::Object^ sender, System::Windows::Forms::PaintEventArgs^ e) {
	}
	private: System::Void listBox1_SelectedIndexChanged(System::Object^ sender, System::EventArgs^ e) {
	}

			//Previous Scan Results - Jenny McCullagh
			
			//This is to read scan results from a text file and put them into the lVScanReports List View
			//When you click on a line a from will pop up with details of that scan from what is in the text file

		   //Read from -scanResults.txt
		   //Reference : https://stackoverflow.com/questions/31223141/c-cli-read-text-file

		  private: System::Void scan_logs_Load(System::Object^ sender, System::EventArgs^ e) 
		  {
			 try {


				  String^ scanResults = "03-06-2021-02-17-10-scan_report.txt"; //This is currently hard coded for a file on my system. Need to change!!
				  StreamReader^ din = File::OpenText(scanResults); 

				  String^ str;
				  int count = 0;

				  while ((str = din->ReadLine()) != nullptr)
				  {
					  count++;
					  lVScanReports->Items->Add(str);
				  }
			  }
			  catch (IOException^) {
				  lVScanReports->Items->Add("You have no previous scan results");
			  }
		}			
};
}
